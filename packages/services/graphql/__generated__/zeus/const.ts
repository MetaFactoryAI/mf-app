/* eslint-disable */

export const AllTypesProps: Record<string, any> = {
  Int_comparison_exp: {
    _eq: {
      type: 'Int',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _gt: {
      type: 'Int',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _gte: {
      type: 'Int',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _in: {
      type: 'Int',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _is_null: {
      type: 'Boolean',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _lt: {
      type: 'Int',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _lte: {
      type: 'Int',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _neq: {
      type: 'Int',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _nin: {
      type: 'Int',
      array: true,
      arrayRequired: false,
      required: true,
    },
  },
  String_comparison_exp: {
    _eq: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _gt: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _gte: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _ilike: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _in: {
      type: 'String',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _iregex: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _is_null: {
      type: 'Boolean',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _like: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _lt: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _lte: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _neq: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _nilike: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _nin: {
      type: 'String',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _niregex: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _nlike: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _nregex: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _nsimilar: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _regex: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _similar: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contribution_votes_aggregate_fields: {
    count: {
      columns: {
        type: 'contribution_votes_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      distinct: {
        type: 'Boolean',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
  },
  contribution_votes_aggregate_order_by: {
    count: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    max: {
      type: 'contribution_votes_max_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    min: {
      type: 'contribution_votes_min_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contribution_votes_arr_rel_insert_input: {
    data: {
      type: 'contribution_votes_insert_input',
      array: true,
      arrayRequired: true,
      required: true,
    },
    on_conflict: {
      type: 'contribution_votes_on_conflict',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contribution_votes_bool_exp: {
    _and: {
      type: 'contribution_votes_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _not: {
      type: 'contribution_votes_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _or: {
      type: 'contribution_votes_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    contribution: {
      type: 'contributions_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    contribution_id: {
      type: 'uuid_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    rating: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user: {
      type: 'users_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user_id: {
      type: 'uuid_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contribution_votes_constraint: 'enum',
  contribution_votes_insert_input: {
    contribution: {
      type: 'contributions_obj_rel_insert_input',
      array: false,
      arrayRequired: false,
      required: false,
    },
    contribution_id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    rating: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user: {
      type: 'users_obj_rel_insert_input',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user_id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contribution_votes_max_order_by: {
    contribution_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    rating: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contribution_votes_min_order_by: {
    contribution_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    rating: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contribution_votes_on_conflict: {
    constraint: {
      type: 'contribution_votes_constraint',
      array: false,
      arrayRequired: false,
      required: true,
    },
    update_columns: {
      type: 'contribution_votes_update_column',
      array: true,
      arrayRequired: true,
      required: true,
    },
    where: {
      type: 'contribution_votes_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contribution_votes_order_by: {
    contribution: {
      type: 'contributions_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    contribution_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    rating: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user: {
      type: 'users_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contribution_votes_pk_columns_input: {
    contribution_id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: true,
    },
    user_id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: true,
    },
  },
  contribution_votes_select_column: 'enum',
  contribution_votes_set_input: {
    contribution_id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    rating: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user_id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contribution_votes_update_column: 'enum',
  contributions: {
    contributors: {
      distinct_on: {
        type: 'contributors_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contributors_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contributors_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    contributors_aggregate: {
      distinct_on: {
        type: 'contributors_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contributors_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contributors_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    votes: {
      distinct_on: {
        type: 'contribution_votes_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contribution_votes_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contribution_votes_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    votes_aggregate: {
      distinct_on: {
        type: 'contribution_votes_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contribution_votes_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contribution_votes_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
  },
  contributions_aggregate_fields: {
    count: {
      columns: {
        type: 'contributions_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      distinct: {
        type: 'Boolean',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
  },
  contributions_bool_exp: {
    _and: {
      type: 'contributions_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _not: {
      type: 'contributions_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _or: {
      type: 'contributions_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    artifact: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    author: {
      type: 'users_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    category: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    contributors: {
      type: 'contributors_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    created_at: {
      type: 'timestamptz_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    created_by: {
      type: 'uuid_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    date: {
      type: 'date_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    description: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    effort: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    id: {
      type: 'uuid_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    impact: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    title: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    votes: {
      type: 'contribution_votes_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    weight: {
      type: 'Int_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributions_constraint: 'enum',
  contributions_inc_input: {
    weight: {
      type: 'Int',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributions_insert_input: {
    artifact: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    author: {
      type: 'users_obj_rel_insert_input',
      array: false,
      arrayRequired: false,
      required: false,
    },
    category: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    contributors: {
      type: 'contributors_arr_rel_insert_input',
      array: false,
      arrayRequired: false,
      required: false,
    },
    created_at: {
      type: 'timestamptz',
      array: false,
      arrayRequired: false,
      required: false,
    },
    created_by: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    date: {
      type: 'date',
      array: false,
      arrayRequired: false,
      required: false,
    },
    description: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    effort: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    impact: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    title: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    votes: {
      type: 'contribution_votes_arr_rel_insert_input',
      array: false,
      arrayRequired: false,
      required: false,
    },
    weight: {
      type: 'Int',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributions_obj_rel_insert_input: {
    data: {
      type: 'contributions_insert_input',
      array: false,
      arrayRequired: false,
      required: true,
    },
    on_conflict: {
      type: 'contributions_on_conflict',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributions_on_conflict: {
    constraint: {
      type: 'contributions_constraint',
      array: false,
      arrayRequired: false,
      required: true,
    },
    update_columns: {
      type: 'contributions_update_column',
      array: true,
      arrayRequired: true,
      required: true,
    },
    where: {
      type: 'contributions_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributions_order_by: {
    artifact: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    author: {
      type: 'users_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    category: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    contributors_aggregate: {
      type: 'contributors_aggregate_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    created_at: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    created_by: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    date: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    description: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    effort: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    impact: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    title: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    votes_aggregate: {
      type: 'contribution_votes_aggregate_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    weight: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributions_pk_columns_input: {
    id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: true,
    },
  },
  contributions_select_column: 'enum',
  contributions_set_input: {
    artifact: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    category: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    created_at: {
      type: 'timestamptz',
      array: false,
      arrayRequired: false,
      required: false,
    },
    created_by: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    date: {
      type: 'date',
      array: false,
      arrayRequired: false,
      required: false,
    },
    description: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    effort: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    impact: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    title: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    weight: {
      type: 'Int',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributions_update_column: 'enum',
  contributors_aggregate_fields: {
    count: {
      columns: {
        type: 'contributors_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      distinct: {
        type: 'Boolean',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
  },
  contributors_aggregate_order_by: {
    avg: {
      type: 'contributors_avg_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    count: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    max: {
      type: 'contributors_max_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    min: {
      type: 'contributors_min_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    stddev: {
      type: 'contributors_stddev_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    stddev_pop: {
      type: 'contributors_stddev_pop_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    stddev_samp: {
      type: 'contributors_stddev_samp_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    sum: {
      type: 'contributors_sum_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    var_pop: {
      type: 'contributors_var_pop_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    var_samp: {
      type: 'contributors_var_samp_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    variance: {
      type: 'contributors_variance_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_arr_rel_insert_input: {
    data: {
      type: 'contributors_insert_input',
      array: true,
      arrayRequired: true,
      required: true,
    },
    on_conflict: {
      type: 'contributors_on_conflict',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_avg_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_bool_exp: {
    _and: {
      type: 'contributors_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _not: {
      type: 'contributors_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _or: {
      type: 'contributors_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    contribution: {
      type: 'contributions_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    contribution_id: {
      type: 'uuid_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    contribution_share: {
      type: 'numeric_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user: {
      type: 'users_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user_id: {
      type: 'uuid_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_constraint: 'enum',
  contributors_inc_input: {
    contribution_share: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_insert_input: {
    contribution: {
      type: 'contributions_obj_rel_insert_input',
      array: false,
      arrayRequired: false,
      required: false,
    },
    contribution_id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    contribution_share: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user: {
      type: 'users_obj_rel_insert_input',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user_id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_max_order_by: {
    contribution_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_min_order_by: {
    contribution_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_on_conflict: {
    constraint: {
      type: 'contributors_constraint',
      array: false,
      arrayRequired: false,
      required: true,
    },
    update_columns: {
      type: 'contributors_update_column',
      array: true,
      arrayRequired: true,
      required: true,
    },
    where: {
      type: 'contributors_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_order_by: {
    contribution: {
      type: 'contributions_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    contribution_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user: {
      type: 'users_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_pk_columns_input: {
    contribution_id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: true,
    },
    user_id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: true,
    },
  },
  contributors_select_column: 'enum',
  contributors_set_input: {
    contribution_id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    contribution_share: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    user_id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_stddev_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_stddev_pop_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_stddev_samp_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_sum_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_update_column: 'enum',
  contributors_var_pop_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_var_samp_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  contributors_variance_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  date: 'String',
  date_comparison_exp: {
    _eq: {
      type: 'date',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _gt: {
      type: 'date',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _gte: {
      type: 'date',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _in: {
      type: 'date',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _is_null: {
      type: 'Boolean',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _lt: {
      type: 'date',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _lte: {
      type: 'date',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _neq: {
      type: 'date',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _nin: {
      type: 'date',
      array: true,
      arrayRequired: false,
      required: true,
    },
  },
  jsonb: 'String',
  jsonb_comparison_exp: {
    _contained_in: {
      type: 'jsonb',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _contains: {
      type: 'jsonb',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _eq: {
      type: 'jsonb',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _gt: {
      type: 'jsonb',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _gte: {
      type: 'jsonb',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _has_key: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _has_keys_all: {
      type: 'String',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _has_keys_any: {
      type: 'String',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _in: {
      type: 'jsonb',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _is_null: {
      type: 'Boolean',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _lt: {
      type: 'jsonb',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _lte: {
      type: 'jsonb',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _neq: {
      type: 'jsonb',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _nin: {
      type: 'jsonb',
      array: true,
      arrayRequired: false,
      required: true,
    },
  },
  mutation_root: {
    delete_contribution_votes: {
      where: {
        type: 'contribution_votes_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_contribution_votes_by_pk: {
      contribution_id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
      user_id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_contributions: {
      where: {
        type: 'contributions_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_contributions_by_pk: {
      id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_contributors: {
      where: {
        type: 'contributors_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_contributors_by_pk: {
      contribution_id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
      user_id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_robot_order: {
      where: {
        type: 'robot_order_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_robot_order_by_pk: {
      order_id: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_robot_product: {
      where: {
        type: 'robot_product_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_robot_product_by_pk: {
      id: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_robot_product_designer: {
      where: {
        type: 'robot_product_designer_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_robot_product_designer_by_pk: {
      eth_address: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
      product_id: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_shop_api_users: {
      where: {
        type: 'shop_api_users_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_shop_api_users_by_pk: {
      username: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_shop_product_locks: {
      where: {
        type: 'shop_product_locks_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_shop_product_locks_by_pk: {
      access_code: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
      lock_id: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_users: {
      where: {
        type: 'users_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    delete_users_by_pk: {
      id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    insert_contribution_votes: {
      objects: {
        type: 'contribution_votes_insert_input',
        array: true,
        arrayRequired: true,
        required: true,
      },
      on_conflict: {
        type: 'contribution_votes_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_contribution_votes_one: {
      object: {
        type: 'contribution_votes_insert_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
      on_conflict: {
        type: 'contribution_votes_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_contributions: {
      objects: {
        type: 'contributions_insert_input',
        array: true,
        arrayRequired: true,
        required: true,
      },
      on_conflict: {
        type: 'contributions_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_contributions_one: {
      object: {
        type: 'contributions_insert_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
      on_conflict: {
        type: 'contributions_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_contributors: {
      objects: {
        type: 'contributors_insert_input',
        array: true,
        arrayRequired: true,
        required: true,
      },
      on_conflict: {
        type: 'contributors_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_contributors_one: {
      object: {
        type: 'contributors_insert_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
      on_conflict: {
        type: 'contributors_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_robot_order: {
      objects: {
        type: 'robot_order_insert_input',
        array: true,
        arrayRequired: true,
        required: true,
      },
      on_conflict: {
        type: 'robot_order_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_robot_order_one: {
      object: {
        type: 'robot_order_insert_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
      on_conflict: {
        type: 'robot_order_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_robot_product: {
      objects: {
        type: 'robot_product_insert_input',
        array: true,
        arrayRequired: true,
        required: true,
      },
      on_conflict: {
        type: 'robot_product_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_robot_product_designer: {
      objects: {
        type: 'robot_product_designer_insert_input',
        array: true,
        arrayRequired: true,
        required: true,
      },
      on_conflict: {
        type: 'robot_product_designer_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_robot_product_designer_one: {
      object: {
        type: 'robot_product_designer_insert_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
      on_conflict: {
        type: 'robot_product_designer_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_robot_product_one: {
      object: {
        type: 'robot_product_insert_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
      on_conflict: {
        type: 'robot_product_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_shop_api_users: {
      objects: {
        type: 'shop_api_users_insert_input',
        array: true,
        arrayRequired: true,
        required: true,
      },
      on_conflict: {
        type: 'shop_api_users_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_shop_api_users_one: {
      object: {
        type: 'shop_api_users_insert_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
      on_conflict: {
        type: 'shop_api_users_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_shop_product_locks: {
      objects: {
        type: 'shop_product_locks_insert_input',
        array: true,
        arrayRequired: true,
        required: true,
      },
      on_conflict: {
        type: 'shop_product_locks_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_shop_product_locks_one: {
      object: {
        type: 'shop_product_locks_insert_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
      on_conflict: {
        type: 'shop_product_locks_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_users: {
      objects: {
        type: 'users_insert_input',
        array: true,
        arrayRequired: true,
        required: true,
      },
      on_conflict: {
        type: 'users_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    insert_users_one: {
      object: {
        type: 'users_insert_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
      on_conflict: {
        type: 'users_on_conflict',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    update_contribution_votes: {
      _set: {
        type: 'contribution_votes_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      where: {
        type: 'contribution_votes_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_contribution_votes_by_pk: {
      _set: {
        type: 'contribution_votes_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      pk_columns: {
        type: 'contribution_votes_pk_columns_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_contributions: {
      _inc: {
        type: 'contributions_inc_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _set: {
        type: 'contributions_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      where: {
        type: 'contributions_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_contributions_by_pk: {
      _inc: {
        type: 'contributions_inc_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _set: {
        type: 'contributions_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      pk_columns: {
        type: 'contributions_pk_columns_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_contributors: {
      _inc: {
        type: 'contributors_inc_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _set: {
        type: 'contributors_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      where: {
        type: 'contributors_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_contributors_by_pk: {
      _inc: {
        type: 'contributors_inc_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _set: {
        type: 'contributors_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      pk_columns: {
        type: 'contributors_pk_columns_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_robot_order: {
      _inc: {
        type: 'robot_order_inc_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _set: {
        type: 'robot_order_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      where: {
        type: 'robot_order_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_robot_order_by_pk: {
      _inc: {
        type: 'robot_order_inc_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _set: {
        type: 'robot_order_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      pk_columns: {
        type: 'robot_order_pk_columns_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_robot_product: {
      _append: {
        type: 'robot_product_append_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _delete_at_path: {
        type: 'robot_product_delete_at_path_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _delete_elem: {
        type: 'robot_product_delete_elem_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _delete_key: {
        type: 'robot_product_delete_key_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _prepend: {
        type: 'robot_product_prepend_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _set: {
        type: 'robot_product_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      where: {
        type: 'robot_product_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_robot_product_by_pk: {
      _append: {
        type: 'robot_product_append_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _delete_at_path: {
        type: 'robot_product_delete_at_path_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _delete_elem: {
        type: 'robot_product_delete_elem_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _delete_key: {
        type: 'robot_product_delete_key_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _prepend: {
        type: 'robot_product_prepend_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _set: {
        type: 'robot_product_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      pk_columns: {
        type: 'robot_product_pk_columns_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_robot_product_designer: {
      _inc: {
        type: 'robot_product_designer_inc_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _set: {
        type: 'robot_product_designer_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      where: {
        type: 'robot_product_designer_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_robot_product_designer_by_pk: {
      _inc: {
        type: 'robot_product_designer_inc_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      _set: {
        type: 'robot_product_designer_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      pk_columns: {
        type: 'robot_product_designer_pk_columns_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_shop_api_users: {
      _set: {
        type: 'shop_api_users_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      where: {
        type: 'shop_api_users_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_shop_api_users_by_pk: {
      _set: {
        type: 'shop_api_users_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      pk_columns: {
        type: 'shop_api_users_pk_columns_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_shop_product_locks: {
      _set: {
        type: 'shop_product_locks_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      where: {
        type: 'shop_product_locks_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_shop_product_locks_by_pk: {
      _set: {
        type: 'shop_product_locks_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      pk_columns: {
        type: 'shop_product_locks_pk_columns_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_users: {
      _set: {
        type: 'users_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      where: {
        type: 'users_bool_exp',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    update_users_by_pk: {
      _set: {
        type: 'users_set_input',
        array: false,
        arrayRequired: false,
        required: false,
      },
      pk_columns: {
        type: 'users_pk_columns_input',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
  },
  numeric: 'String',
  numeric_comparison_exp: {
    _eq: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _gt: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _gte: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _in: {
      type: 'numeric',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _is_null: {
      type: 'Boolean',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _lt: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _lte: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _neq: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _nin: {
      type: 'numeric',
      array: true,
      arrayRequired: false,
      required: true,
    },
  },
  order_by: 'enum',
  query_root: {
    contribution_votes: {
      distinct_on: {
        type: 'contribution_votes_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contribution_votes_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contribution_votes_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    contribution_votes_aggregate: {
      distinct_on: {
        type: 'contribution_votes_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contribution_votes_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contribution_votes_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    contribution_votes_by_pk: {
      contribution_id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
      user_id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    contributions: {
      distinct_on: {
        type: 'contributions_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contributions_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contributions_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    contributions_aggregate: {
      distinct_on: {
        type: 'contributions_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contributions_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contributions_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    contributions_by_pk: {
      id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    contributors: {
      distinct_on: {
        type: 'contributors_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contributors_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contributors_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    contributors_aggregate: {
      distinct_on: {
        type: 'contributors_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contributors_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contributors_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    contributors_by_pk: {
      contribution_id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
      user_id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    robot_order: {
      distinct_on: {
        type: 'robot_order_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'robot_order_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'robot_order_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    robot_order_aggregate: {
      distinct_on: {
        type: 'robot_order_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'robot_order_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'robot_order_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    robot_order_by_pk: {
      order_id: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    robot_product: {
      distinct_on: {
        type: 'robot_product_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'robot_product_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'robot_product_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    robot_product_aggregate: {
      distinct_on: {
        type: 'robot_product_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'robot_product_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'robot_product_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    robot_product_by_pk: {
      id: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    robot_product_designer: {
      distinct_on: {
        type: 'robot_product_designer_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'robot_product_designer_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'robot_product_designer_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    robot_product_designer_aggregate: {
      distinct_on: {
        type: 'robot_product_designer_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'robot_product_designer_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'robot_product_designer_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    robot_product_designer_by_pk: {
      eth_address: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
      product_id: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    shop_api_users: {
      distinct_on: {
        type: 'shop_api_users_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'shop_api_users_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'shop_api_users_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    shop_api_users_aggregate: {
      distinct_on: {
        type: 'shop_api_users_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'shop_api_users_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'shop_api_users_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    shop_api_users_by_pk: {
      username: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    shop_product_locks: {
      distinct_on: {
        type: 'shop_product_locks_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'shop_product_locks_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'shop_product_locks_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    shop_product_locks_aggregate: {
      distinct_on: {
        type: 'shop_product_locks_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'shop_product_locks_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'shop_product_locks_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    shop_product_locks_by_pk: {
      access_code: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
      lock_id: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    users: {
      distinct_on: {
        type: 'users_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'users_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'users_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    users_aggregate: {
      distinct_on: {
        type: 'users_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'users_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'users_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    users_by_pk: {
      id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
  },
  robot_order_aggregate_fields: {
    count: {
      columns: {
        type: 'robot_order_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      distinct: {
        type: 'Boolean',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
  },
  robot_order_bool_exp: {
    _and: {
      type: 'robot_order_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _not: {
      type: 'robot_order_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _or: {
      type: 'robot_order_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    buyer_address: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    buyer_reward: {
      type: 'numeric_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    date: {
      type: 'date_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    dollars_spent: {
      type: 'numeric_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    order_id: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    order_number: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    season: {
      type: 'numeric_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_order_constraint: 'enum',
  robot_order_inc_input: {
    buyer_reward: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    dollars_spent: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    season: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_order_insert_input: {
    buyer_address: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    buyer_reward: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    date: {
      type: 'date',
      array: false,
      arrayRequired: false,
      required: false,
    },
    dollars_spent: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    order_id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    order_number: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    season: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_order_on_conflict: {
    constraint: {
      type: 'robot_order_constraint',
      array: false,
      arrayRequired: false,
      required: true,
    },
    update_columns: {
      type: 'robot_order_update_column',
      array: true,
      arrayRequired: true,
      required: true,
    },
    where: {
      type: 'robot_order_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_order_order_by: {
    buyer_address: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    buyer_reward: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    date: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    dollars_spent: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    order_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    order_number: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    season: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_order_pk_columns_input: {
    order_id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: true,
    },
  },
  robot_order_select_column: 'enum',
  robot_order_set_input: {
    buyer_address: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    buyer_reward: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    date: {
      type: 'date',
      array: false,
      arrayRequired: false,
      required: false,
    },
    dollars_spent: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    order_id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    order_number: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    season: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_order_update_column: 'enum',
  robot_product: {
    designers: {
      distinct_on: {
        type: 'robot_product_designer_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'robot_product_designer_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'robot_product_designer_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    designers_aggregate: {
      distinct_on: {
        type: 'robot_product_designer_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'robot_product_designer_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'robot_product_designer_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    nft_metadata: {
      path: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
  },
  robot_product_aggregate_fields: {
    count: {
      columns: {
        type: 'robot_product_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      distinct: {
        type: 'Boolean',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
  },
  robot_product_append_input: {
    nft_metadata: {
      type: 'jsonb',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_bool_exp: {
    _and: {
      type: 'robot_product_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _not: {
      type: 'robot_product_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _or: {
      type: 'robot_product_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    designers: {
      type: 'robot_product_designer_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    id: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    nft_metadata: {
      type: 'jsonb_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    notion_id: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    shopify_id: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    title: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_constraint: 'enum',
  robot_product_delete_at_path_input: {
    nft_metadata: {
      type: 'String',
      array: true,
      arrayRequired: false,
      required: true,
    },
  },
  robot_product_delete_elem_input: {
    nft_metadata: {
      type: 'Int',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_delete_key_input: {
    nft_metadata: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_aggregate_fields: {
    count: {
      columns: {
        type: 'robot_product_designer_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      distinct: {
        type: 'Boolean',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
  },
  robot_product_designer_aggregate_order_by: {
    avg: {
      type: 'robot_product_designer_avg_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    count: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    max: {
      type: 'robot_product_designer_max_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    min: {
      type: 'robot_product_designer_min_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    stddev: {
      type: 'robot_product_designer_stddev_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    stddev_pop: {
      type: 'robot_product_designer_stddev_pop_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    stddev_samp: {
      type: 'robot_product_designer_stddev_samp_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    sum: {
      type: 'robot_product_designer_sum_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    var_pop: {
      type: 'robot_product_designer_var_pop_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    var_samp: {
      type: 'robot_product_designer_var_samp_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    variance: {
      type: 'robot_product_designer_variance_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_arr_rel_insert_input: {
    data: {
      type: 'robot_product_designer_insert_input',
      array: true,
      arrayRequired: true,
      required: true,
    },
    on_conflict: {
      type: 'robot_product_designer_on_conflict',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_avg_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    robot_reward: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_bool_exp: {
    _and: {
      type: 'robot_product_designer_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _not: {
      type: 'robot_product_designer_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _or: {
      type: 'robot_product_designer_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    contribution_share: {
      type: 'numeric_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    designer_name: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    eth_address: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    product: {
      type: 'robot_product_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    product_id: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    robot_reward: {
      type: 'numeric_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_constraint: 'enum',
  robot_product_designer_inc_input: {
    contribution_share: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    robot_reward: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_insert_input: {
    contribution_share: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    designer_name: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    eth_address: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    product: {
      type: 'robot_product_obj_rel_insert_input',
      array: false,
      arrayRequired: false,
      required: false,
    },
    product_id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    robot_reward: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_max_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    designer_name: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    eth_address: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    product_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    robot_reward: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_min_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    designer_name: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    eth_address: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    product_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    robot_reward: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_on_conflict: {
    constraint: {
      type: 'robot_product_designer_constraint',
      array: false,
      arrayRequired: false,
      required: true,
    },
    update_columns: {
      type: 'robot_product_designer_update_column',
      array: true,
      arrayRequired: true,
      required: true,
    },
    where: {
      type: 'robot_product_designer_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    designer_name: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    eth_address: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    product: {
      type: 'robot_product_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    product_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    robot_reward: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_pk_columns_input: {
    eth_address: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: true,
    },
    product_id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: true,
    },
  },
  robot_product_designer_select_column: 'enum',
  robot_product_designer_set_input: {
    contribution_share: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
    designer_name: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    eth_address: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    product_id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    robot_reward: {
      type: 'numeric',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_stddev_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    robot_reward: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_stddev_pop_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    robot_reward: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_stddev_samp_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    robot_reward: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_sum_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    robot_reward: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_update_column: 'enum',
  robot_product_designer_var_pop_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    robot_reward: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_var_samp_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    robot_reward: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_designer_variance_order_by: {
    contribution_share: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    robot_reward: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_insert_input: {
    designers: {
      type: 'robot_product_designer_arr_rel_insert_input',
      array: false,
      arrayRequired: false,
      required: false,
    },
    id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    nft_metadata: {
      type: 'jsonb',
      array: false,
      arrayRequired: false,
      required: false,
    },
    notion_id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    shopify_id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    title: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_obj_rel_insert_input: {
    data: {
      type: 'robot_product_insert_input',
      array: false,
      arrayRequired: false,
      required: true,
    },
    on_conflict: {
      type: 'robot_product_on_conflict',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_on_conflict: {
    constraint: {
      type: 'robot_product_constraint',
      array: false,
      arrayRequired: false,
      required: true,
    },
    update_columns: {
      type: 'robot_product_update_column',
      array: true,
      arrayRequired: true,
      required: true,
    },
    where: {
      type: 'robot_product_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_order_by: {
    designers_aggregate: {
      type: 'robot_product_designer_aggregate_order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    nft_metadata: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    notion_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    shopify_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    title: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_pk_columns_input: {
    id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: true,
    },
  },
  robot_product_prepend_input: {
    nft_metadata: {
      type: 'jsonb',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_select_column: 'enum',
  robot_product_set_input: {
    id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    nft_metadata: {
      type: 'jsonb',
      array: false,
      arrayRequired: false,
      required: false,
    },
    notion_id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    shopify_id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    title: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  robot_product_update_column: 'enum',
  shop_api_users_aggregate_fields: {
    count: {
      columns: {
        type: 'shop_api_users_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      distinct: {
        type: 'Boolean',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
  },
  shop_api_users_bool_exp: {
    _and: {
      type: 'shop_api_users_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _not: {
      type: 'shop_api_users_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _or: {
      type: 'shop_api_users_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    password_hash: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    username: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  shop_api_users_constraint: 'enum',
  shop_api_users_insert_input: {
    password_hash: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    username: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  shop_api_users_on_conflict: {
    constraint: {
      type: 'shop_api_users_constraint',
      array: false,
      arrayRequired: false,
      required: true,
    },
    update_columns: {
      type: 'shop_api_users_update_column',
      array: true,
      arrayRequired: true,
      required: true,
    },
    where: {
      type: 'shop_api_users_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  shop_api_users_order_by: {
    password_hash: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    username: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  shop_api_users_pk_columns_input: {
    username: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: true,
    },
  },
  shop_api_users_select_column: 'enum',
  shop_api_users_set_input: {
    password_hash: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    username: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  shop_api_users_update_column: 'enum',
  shop_product_locks_aggregate_fields: {
    count: {
      columns: {
        type: 'shop_product_locks_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      distinct: {
        type: 'Boolean',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
  },
  shop_product_locks_bool_exp: {
    _and: {
      type: 'shop_product_locks_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _not: {
      type: 'shop_product_locks_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _or: {
      type: 'shop_product_locks_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    access_code: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    created_at: {
      type: 'timestamptz_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    customer_eth_address: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    lock_id: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  shop_product_locks_constraint: 'enum',
  shop_product_locks_insert_input: {
    access_code: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    created_at: {
      type: 'timestamptz',
      array: false,
      arrayRequired: false,
      required: false,
    },
    customer_eth_address: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    lock_id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  shop_product_locks_on_conflict: {
    constraint: {
      type: 'shop_product_locks_constraint',
      array: false,
      arrayRequired: false,
      required: true,
    },
    update_columns: {
      type: 'shop_product_locks_update_column',
      array: true,
      arrayRequired: true,
      required: true,
    },
    where: {
      type: 'shop_product_locks_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  shop_product_locks_order_by: {
    access_code: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    created_at: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    customer_eth_address: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    lock_id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  shop_product_locks_pk_columns_input: {
    access_code: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: true,
    },
    lock_id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: true,
    },
  },
  shop_product_locks_select_column: 'enum',
  shop_product_locks_set_input: {
    access_code: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    created_at: {
      type: 'timestamptz',
      array: false,
      arrayRequired: false,
      required: false,
    },
    customer_eth_address: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    lock_id: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  shop_product_locks_update_column: 'enum',
  subscription_root: {
    contribution_votes: {
      distinct_on: {
        type: 'contribution_votes_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contribution_votes_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contribution_votes_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    contribution_votes_aggregate: {
      distinct_on: {
        type: 'contribution_votes_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contribution_votes_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contribution_votes_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    contribution_votes_by_pk: {
      contribution_id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
      user_id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    contributions: {
      distinct_on: {
        type: 'contributions_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contributions_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contributions_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    contributions_aggregate: {
      distinct_on: {
        type: 'contributions_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contributions_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contributions_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    contributions_by_pk: {
      id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    contributors: {
      distinct_on: {
        type: 'contributors_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contributors_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contributors_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    contributors_aggregate: {
      distinct_on: {
        type: 'contributors_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'contributors_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'contributors_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    contributors_by_pk: {
      contribution_id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
      user_id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    robot_order: {
      distinct_on: {
        type: 'robot_order_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'robot_order_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'robot_order_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    robot_order_aggregate: {
      distinct_on: {
        type: 'robot_order_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'robot_order_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'robot_order_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    robot_order_by_pk: {
      order_id: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    robot_product: {
      distinct_on: {
        type: 'robot_product_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'robot_product_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'robot_product_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    robot_product_aggregate: {
      distinct_on: {
        type: 'robot_product_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'robot_product_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'robot_product_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    robot_product_by_pk: {
      id: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    robot_product_designer: {
      distinct_on: {
        type: 'robot_product_designer_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'robot_product_designer_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'robot_product_designer_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    robot_product_designer_aggregate: {
      distinct_on: {
        type: 'robot_product_designer_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'robot_product_designer_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'robot_product_designer_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    robot_product_designer_by_pk: {
      eth_address: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
      product_id: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    shop_api_users: {
      distinct_on: {
        type: 'shop_api_users_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'shop_api_users_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'shop_api_users_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    shop_api_users_aggregate: {
      distinct_on: {
        type: 'shop_api_users_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'shop_api_users_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'shop_api_users_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    shop_api_users_by_pk: {
      username: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    shop_product_locks: {
      distinct_on: {
        type: 'shop_product_locks_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'shop_product_locks_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'shop_product_locks_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    shop_product_locks_aggregate: {
      distinct_on: {
        type: 'shop_product_locks_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'shop_product_locks_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'shop_product_locks_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    shop_product_locks_by_pk: {
      access_code: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
      lock_id: {
        type: 'String',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
    users: {
      distinct_on: {
        type: 'users_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'users_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'users_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    users_aggregate: {
      distinct_on: {
        type: 'users_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      limit: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      offset: {
        type: 'Int',
        array: false,
        arrayRequired: false,
        required: false,
      },
      order_by: {
        type: 'users_order_by',
        array: true,
        arrayRequired: false,
        required: true,
      },
      where: {
        type: 'users_bool_exp',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
    users_by_pk: {
      id: {
        type: 'uuid',
        array: false,
        arrayRequired: false,
        required: true,
      },
    },
  },
  timestamptz: 'String',
  timestamptz_comparison_exp: {
    _eq: {
      type: 'timestamptz',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _gt: {
      type: 'timestamptz',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _gte: {
      type: 'timestamptz',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _in: {
      type: 'timestamptz',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _is_null: {
      type: 'Boolean',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _lt: {
      type: 'timestamptz',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _lte: {
      type: 'timestamptz',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _neq: {
      type: 'timestamptz',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _nin: {
      type: 'timestamptz',
      array: true,
      arrayRequired: false,
      required: true,
    },
  },
  users_aggregate_fields: {
    count: {
      columns: {
        type: 'users_select_column',
        array: true,
        arrayRequired: false,
        required: true,
      },
      distinct: {
        type: 'Boolean',
        array: false,
        arrayRequired: false,
        required: false,
      },
    },
  },
  users_bool_exp: {
    _and: {
      type: 'users_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _not: {
      type: 'users_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _or: {
      type: 'users_bool_exp',
      array: true,
      arrayRequired: false,
      required: true,
    },
    eth_address: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    id: {
      type: 'uuid_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
    name: {
      type: 'String_comparison_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  users_constraint: 'enum',
  users_insert_input: {
    eth_address: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    name: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  users_obj_rel_insert_input: {
    data: {
      type: 'users_insert_input',
      array: false,
      arrayRequired: false,
      required: true,
    },
    on_conflict: {
      type: 'users_on_conflict',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  users_on_conflict: {
    constraint: {
      type: 'users_constraint',
      array: false,
      arrayRequired: false,
      required: true,
    },
    update_columns: {
      type: 'users_update_column',
      array: true,
      arrayRequired: true,
      required: true,
    },
    where: {
      type: 'users_bool_exp',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  users_order_by: {
    eth_address: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    id: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
    name: {
      type: 'order_by',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  users_pk_columns_input: {
    id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: true,
    },
  },
  users_select_column: 'enum',
  users_set_input: {
    eth_address: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
    id: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    name: {
      type: 'String',
      array: false,
      arrayRequired: false,
      required: false,
    },
  },
  users_update_column: 'enum',
  uuid: 'String',
  uuid_comparison_exp: {
    _eq: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _gt: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _gte: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _in: {
      type: 'uuid',
      array: true,
      arrayRequired: false,
      required: true,
    },
    _is_null: {
      type: 'Boolean',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _lt: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _lte: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _neq: {
      type: 'uuid',
      array: false,
      arrayRequired: false,
      required: false,
    },
    _nin: {
      type: 'uuid',
      array: true,
      arrayRequired: false,
      required: true,
    },
  },
};

export const ReturnTypes: Record<string, any> = {
  cached: {
    ttl: 'Int',
    refresh: 'Boolean',
  },
  contribution_votes: {
    contribution: 'contributions',
    contribution_id: 'uuid',
    rating: 'String',
    user: 'users',
    user_id: 'uuid',
  },
  contribution_votes_aggregate: {
    aggregate: 'contribution_votes_aggregate_fields',
    nodes: 'contribution_votes',
  },
  contribution_votes_aggregate_fields: {
    count: 'Int',
    max: 'contribution_votes_max_fields',
    min: 'contribution_votes_min_fields',
  },
  contribution_votes_max_fields: {
    contribution_id: 'uuid',
    rating: 'String',
    user_id: 'uuid',
  },
  contribution_votes_min_fields: {
    contribution_id: 'uuid',
    rating: 'String',
    user_id: 'uuid',
  },
  contribution_votes_mutation_response: {
    affected_rows: 'Int',
    returning: 'contribution_votes',
  },
  contributions: {
    artifact: 'String',
    author: 'users',
    category: 'String',
    contributors: 'contributors',
    contributors_aggregate: 'contributors_aggregate',
    created_at: 'timestamptz',
    created_by: 'uuid',
    date: 'date',
    description: 'String',
    effort: 'String',
    id: 'uuid',
    impact: 'String',
    title: 'String',
    votes: 'contribution_votes',
    votes_aggregate: 'contribution_votes_aggregate',
    weight: 'Int',
  },
  contributions_aggregate: {
    aggregate: 'contributions_aggregate_fields',
    nodes: 'contributions',
  },
  contributions_aggregate_fields: {
    avg: 'contributions_avg_fields',
    count: 'Int',
    max: 'contributions_max_fields',
    min: 'contributions_min_fields',
    stddev: 'contributions_stddev_fields',
    stddev_pop: 'contributions_stddev_pop_fields',
    stddev_samp: 'contributions_stddev_samp_fields',
    sum: 'contributions_sum_fields',
    var_pop: 'contributions_var_pop_fields',
    var_samp: 'contributions_var_samp_fields',
    variance: 'contributions_variance_fields',
  },
  contributions_avg_fields: {
    weight: 'Float',
  },
  contributions_max_fields: {
    artifact: 'String',
    category: 'String',
    created_at: 'timestamptz',
    created_by: 'uuid',
    date: 'date',
    description: 'String',
    effort: 'String',
    id: 'uuid',
    impact: 'String',
    title: 'String',
    weight: 'Int',
  },
  contributions_min_fields: {
    artifact: 'String',
    category: 'String',
    created_at: 'timestamptz',
    created_by: 'uuid',
    date: 'date',
    description: 'String',
    effort: 'String',
    id: 'uuid',
    impact: 'String',
    title: 'String',
    weight: 'Int',
  },
  contributions_mutation_response: {
    affected_rows: 'Int',
    returning: 'contributions',
  },
  contributions_stddev_fields: {
    weight: 'Float',
  },
  contributions_stddev_pop_fields: {
    weight: 'Float',
  },
  contributions_stddev_samp_fields: {
    weight: 'Float',
  },
  contributions_sum_fields: {
    weight: 'Int',
  },
  contributions_var_pop_fields: {
    weight: 'Float',
  },
  contributions_var_samp_fields: {
    weight: 'Float',
  },
  contributions_variance_fields: {
    weight: 'Float',
  },
  contributors: {
    contribution: 'contributions',
    contribution_id: 'uuid',
    contribution_share: 'numeric',
    user: 'users',
    user_id: 'uuid',
  },
  contributors_aggregate: {
    aggregate: 'contributors_aggregate_fields',
    nodes: 'contributors',
  },
  contributors_aggregate_fields: {
    avg: 'contributors_avg_fields',
    count: 'Int',
    max: 'contributors_max_fields',
    min: 'contributors_min_fields',
    stddev: 'contributors_stddev_fields',
    stddev_pop: 'contributors_stddev_pop_fields',
    stddev_samp: 'contributors_stddev_samp_fields',
    sum: 'contributors_sum_fields',
    var_pop: 'contributors_var_pop_fields',
    var_samp: 'contributors_var_samp_fields',
    variance: 'contributors_variance_fields',
  },
  contributors_avg_fields: {
    contribution_share: 'Float',
  },
  contributors_max_fields: {
    contribution_id: 'uuid',
    contribution_share: 'numeric',
    user_id: 'uuid',
  },
  contributors_min_fields: {
    contribution_id: 'uuid',
    contribution_share: 'numeric',
    user_id: 'uuid',
  },
  contributors_mutation_response: {
    affected_rows: 'Int',
    returning: 'contributors',
  },
  contributors_stddev_fields: {
    contribution_share: 'Float',
  },
  contributors_stddev_pop_fields: {
    contribution_share: 'Float',
  },
  contributors_stddev_samp_fields: {
    contribution_share: 'Float',
  },
  contributors_sum_fields: {
    contribution_share: 'numeric',
  },
  contributors_var_pop_fields: {
    contribution_share: 'Float',
  },
  contributors_var_samp_fields: {
    contribution_share: 'Float',
  },
  contributors_variance_fields: {
    contribution_share: 'Float',
  },
  mutation_root: {
    delete_contribution_votes: 'contribution_votes_mutation_response',
    delete_contribution_votes_by_pk: 'contribution_votes',
    delete_contributions: 'contributions_mutation_response',
    delete_contributions_by_pk: 'contributions',
    delete_contributors: 'contributors_mutation_response',
    delete_contributors_by_pk: 'contributors',
    delete_robot_order: 'robot_order_mutation_response',
    delete_robot_order_by_pk: 'robot_order',
    delete_robot_product: 'robot_product_mutation_response',
    delete_robot_product_by_pk: 'robot_product',
    delete_robot_product_designer: 'robot_product_designer_mutation_response',
    delete_robot_product_designer_by_pk: 'robot_product_designer',
    delete_shop_api_users: 'shop_api_users_mutation_response',
    delete_shop_api_users_by_pk: 'shop_api_users',
    delete_shop_product_locks: 'shop_product_locks_mutation_response',
    delete_shop_product_locks_by_pk: 'shop_product_locks',
    delete_users: 'users_mutation_response',
    delete_users_by_pk: 'users',
    insert_contribution_votes: 'contribution_votes_mutation_response',
    insert_contribution_votes_one: 'contribution_votes',
    insert_contributions: 'contributions_mutation_response',
    insert_contributions_one: 'contributions',
    insert_contributors: 'contributors_mutation_response',
    insert_contributors_one: 'contributors',
    insert_robot_order: 'robot_order_mutation_response',
    insert_robot_order_one: 'robot_order',
    insert_robot_product: 'robot_product_mutation_response',
    insert_robot_product_designer: 'robot_product_designer_mutation_response',
    insert_robot_product_designer_one: 'robot_product_designer',
    insert_robot_product_one: 'robot_product',
    insert_shop_api_users: 'shop_api_users_mutation_response',
    insert_shop_api_users_one: 'shop_api_users',
    insert_shop_product_locks: 'shop_product_locks_mutation_response',
    insert_shop_product_locks_one: 'shop_product_locks',
    insert_users: 'users_mutation_response',
    insert_users_one: 'users',
    update_contribution_votes: 'contribution_votes_mutation_response',
    update_contribution_votes_by_pk: 'contribution_votes',
    update_contributions: 'contributions_mutation_response',
    update_contributions_by_pk: 'contributions',
    update_contributors: 'contributors_mutation_response',
    update_contributors_by_pk: 'contributors',
    update_robot_order: 'robot_order_mutation_response',
    update_robot_order_by_pk: 'robot_order',
    update_robot_product: 'robot_product_mutation_response',
    update_robot_product_by_pk: 'robot_product',
    update_robot_product_designer: 'robot_product_designer_mutation_response',
    update_robot_product_designer_by_pk: 'robot_product_designer',
    update_shop_api_users: 'shop_api_users_mutation_response',
    update_shop_api_users_by_pk: 'shop_api_users',
    update_shop_product_locks: 'shop_product_locks_mutation_response',
    update_shop_product_locks_by_pk: 'shop_product_locks',
    update_users: 'users_mutation_response',
    update_users_by_pk: 'users',
  },
  query_root: {
    contribution_votes: 'contribution_votes',
    contribution_votes_aggregate: 'contribution_votes_aggregate',
    contribution_votes_by_pk: 'contribution_votes',
    contributions: 'contributions',
    contributions_aggregate: 'contributions_aggregate',
    contributions_by_pk: 'contributions',
    contributors: 'contributors',
    contributors_aggregate: 'contributors_aggregate',
    contributors_by_pk: 'contributors',
    robot_order: 'robot_order',
    robot_order_aggregate: 'robot_order_aggregate',
    robot_order_by_pk: 'robot_order',
    robot_product: 'robot_product',
    robot_product_aggregate: 'robot_product_aggregate',
    robot_product_by_pk: 'robot_product',
    robot_product_designer: 'robot_product_designer',
    robot_product_designer_aggregate: 'robot_product_designer_aggregate',
    robot_product_designer_by_pk: 'robot_product_designer',
    shop_api_users: 'shop_api_users',
    shop_api_users_aggregate: 'shop_api_users_aggregate',
    shop_api_users_by_pk: 'shop_api_users',
    shop_product_locks: 'shop_product_locks',
    shop_product_locks_aggregate: 'shop_product_locks_aggregate',
    shop_product_locks_by_pk: 'shop_product_locks',
    users: 'users',
    users_aggregate: 'users_aggregate',
    users_by_pk: 'users',
  },
  robot_order: {
    buyer_address: 'String',
    buyer_reward: 'numeric',
    date: 'date',
    dollars_spent: 'numeric',
    order_id: 'String',
    order_number: 'String',
    season: 'numeric',
  },
  robot_order_aggregate: {
    aggregate: 'robot_order_aggregate_fields',
    nodes: 'robot_order',
  },
  robot_order_aggregate_fields: {
    avg: 'robot_order_avg_fields',
    count: 'Int',
    max: 'robot_order_max_fields',
    min: 'robot_order_min_fields',
    stddev: 'robot_order_stddev_fields',
    stddev_pop: 'robot_order_stddev_pop_fields',
    stddev_samp: 'robot_order_stddev_samp_fields',
    sum: 'robot_order_sum_fields',
    var_pop: 'robot_order_var_pop_fields',
    var_samp: 'robot_order_var_samp_fields',
    variance: 'robot_order_variance_fields',
  },
  robot_order_avg_fields: {
    buyer_reward: 'Float',
    dollars_spent: 'Float',
    season: 'Float',
  },
  robot_order_max_fields: {
    buyer_address: 'String',
    buyer_reward: 'numeric',
    date: 'date',
    dollars_spent: 'numeric',
    order_id: 'String',
    order_number: 'String',
    season: 'numeric',
  },
  robot_order_min_fields: {
    buyer_address: 'String',
    buyer_reward: 'numeric',
    date: 'date',
    dollars_spent: 'numeric',
    order_id: 'String',
    order_number: 'String',
    season: 'numeric',
  },
  robot_order_mutation_response: {
    affected_rows: 'Int',
    returning: 'robot_order',
  },
  robot_order_stddev_fields: {
    buyer_reward: 'Float',
    dollars_spent: 'Float',
    season: 'Float',
  },
  robot_order_stddev_pop_fields: {
    buyer_reward: 'Float',
    dollars_spent: 'Float',
    season: 'Float',
  },
  robot_order_stddev_samp_fields: {
    buyer_reward: 'Float',
    dollars_spent: 'Float',
    season: 'Float',
  },
  robot_order_sum_fields: {
    buyer_reward: 'numeric',
    dollars_spent: 'numeric',
    season: 'numeric',
  },
  robot_order_var_pop_fields: {
    buyer_reward: 'Float',
    dollars_spent: 'Float',
    season: 'Float',
  },
  robot_order_var_samp_fields: {
    buyer_reward: 'Float',
    dollars_spent: 'Float',
    season: 'Float',
  },
  robot_order_variance_fields: {
    buyer_reward: 'Float',
    dollars_spent: 'Float',
    season: 'Float',
  },
  robot_product: {
    designers: 'robot_product_designer',
    designers_aggregate: 'robot_product_designer_aggregate',
    id: 'String',
    nft_metadata: 'jsonb',
    notion_id: 'String',
    shopify_id: 'String',
    title: 'String',
  },
  robot_product_aggregate: {
    aggregate: 'robot_product_aggregate_fields',
    nodes: 'robot_product',
  },
  robot_product_aggregate_fields: {
    count: 'Int',
    max: 'robot_product_max_fields',
    min: 'robot_product_min_fields',
  },
  robot_product_designer: {
    contribution_share: 'numeric',
    designer_name: 'String',
    eth_address: 'String',
    product: 'robot_product',
    product_id: 'String',
    robot_reward: 'numeric',
  },
  robot_product_designer_aggregate: {
    aggregate: 'robot_product_designer_aggregate_fields',
    nodes: 'robot_product_designer',
  },
  robot_product_designer_aggregate_fields: {
    avg: 'robot_product_designer_avg_fields',
    count: 'Int',
    max: 'robot_product_designer_max_fields',
    min: 'robot_product_designer_min_fields',
    stddev: 'robot_product_designer_stddev_fields',
    stddev_pop: 'robot_product_designer_stddev_pop_fields',
    stddev_samp: 'robot_product_designer_stddev_samp_fields',
    sum: 'robot_product_designer_sum_fields',
    var_pop: 'robot_product_designer_var_pop_fields',
    var_samp: 'robot_product_designer_var_samp_fields',
    variance: 'robot_product_designer_variance_fields',
  },
  robot_product_designer_avg_fields: {
    contribution_share: 'Float',
    robot_reward: 'Float',
  },
  robot_product_designer_max_fields: {
    contribution_share: 'numeric',
    designer_name: 'String',
    eth_address: 'String',
    product_id: 'String',
    robot_reward: 'numeric',
  },
  robot_product_designer_min_fields: {
    contribution_share: 'numeric',
    designer_name: 'String',
    eth_address: 'String',
    product_id: 'String',
    robot_reward: 'numeric',
  },
  robot_product_designer_mutation_response: {
    affected_rows: 'Int',
    returning: 'robot_product_designer',
  },
  robot_product_designer_stddev_fields: {
    contribution_share: 'Float',
    robot_reward: 'Float',
  },
  robot_product_designer_stddev_pop_fields: {
    contribution_share: 'Float',
    robot_reward: 'Float',
  },
  robot_product_designer_stddev_samp_fields: {
    contribution_share: 'Float',
    robot_reward: 'Float',
  },
  robot_product_designer_sum_fields: {
    contribution_share: 'numeric',
    robot_reward: 'numeric',
  },
  robot_product_designer_var_pop_fields: {
    contribution_share: 'Float',
    robot_reward: 'Float',
  },
  robot_product_designer_var_samp_fields: {
    contribution_share: 'Float',
    robot_reward: 'Float',
  },
  robot_product_designer_variance_fields: {
    contribution_share: 'Float',
    robot_reward: 'Float',
  },
  robot_product_max_fields: {
    id: 'String',
    notion_id: 'String',
    shopify_id: 'String',
    title: 'String',
  },
  robot_product_min_fields: {
    id: 'String',
    notion_id: 'String',
    shopify_id: 'String',
    title: 'String',
  },
  robot_product_mutation_response: {
    affected_rows: 'Int',
    returning: 'robot_product',
  },
  shop_api_users: {
    password_hash: 'String',
    username: 'String',
  },
  shop_api_users_aggregate: {
    aggregate: 'shop_api_users_aggregate_fields',
    nodes: 'shop_api_users',
  },
  shop_api_users_aggregate_fields: {
    count: 'Int',
    max: 'shop_api_users_max_fields',
    min: 'shop_api_users_min_fields',
  },
  shop_api_users_max_fields: {
    password_hash: 'String',
    username: 'String',
  },
  shop_api_users_min_fields: {
    password_hash: 'String',
    username: 'String',
  },
  shop_api_users_mutation_response: {
    affected_rows: 'Int',
    returning: 'shop_api_users',
  },
  shop_product_locks: {
    access_code: 'String',
    created_at: 'timestamptz',
    customer_eth_address: 'String',
    lock_id: 'String',
  },
  shop_product_locks_aggregate: {
    aggregate: 'shop_product_locks_aggregate_fields',
    nodes: 'shop_product_locks',
  },
  shop_product_locks_aggregate_fields: {
    count: 'Int',
    max: 'shop_product_locks_max_fields',
    min: 'shop_product_locks_min_fields',
  },
  shop_product_locks_max_fields: {
    access_code: 'String',
    created_at: 'timestamptz',
    customer_eth_address: 'String',
    lock_id: 'String',
  },
  shop_product_locks_min_fields: {
    access_code: 'String',
    created_at: 'timestamptz',
    customer_eth_address: 'String',
    lock_id: 'String',
  },
  shop_product_locks_mutation_response: {
    affected_rows: 'Int',
    returning: 'shop_product_locks',
  },
  subscription_root: {
    contribution_votes: 'contribution_votes',
    contribution_votes_aggregate: 'contribution_votes_aggregate',
    contribution_votes_by_pk: 'contribution_votes',
    contributions: 'contributions',
    contributions_aggregate: 'contributions_aggregate',
    contributions_by_pk: 'contributions',
    contributors: 'contributors',
    contributors_aggregate: 'contributors_aggregate',
    contributors_by_pk: 'contributors',
    robot_order: 'robot_order',
    robot_order_aggregate: 'robot_order_aggregate',
    robot_order_by_pk: 'robot_order',
    robot_product: 'robot_product',
    robot_product_aggregate: 'robot_product_aggregate',
    robot_product_by_pk: 'robot_product',
    robot_product_designer: 'robot_product_designer',
    robot_product_designer_aggregate: 'robot_product_designer_aggregate',
    robot_product_designer_by_pk: 'robot_product_designer',
    shop_api_users: 'shop_api_users',
    shop_api_users_aggregate: 'shop_api_users_aggregate',
    shop_api_users_by_pk: 'shop_api_users',
    shop_product_locks: 'shop_product_locks',
    shop_product_locks_aggregate: 'shop_product_locks_aggregate',
    shop_product_locks_by_pk: 'shop_product_locks',
    users: 'users',
    users_aggregate: 'users_aggregate',
    users_by_pk: 'users',
  },
  users: {
    eth_address: 'String',
    id: 'uuid',
    name: 'String',
  },
  users_aggregate: {
    aggregate: 'users_aggregate_fields',
    nodes: 'users',
  },
  users_aggregate_fields: {
    count: 'Int',
    max: 'users_max_fields',
    min: 'users_min_fields',
  },
  users_max_fields: {
    eth_address: 'String',
    id: 'uuid',
    name: 'String',
  },
  users_min_fields: {
    eth_address: 'String',
    id: 'uuid',
    name: 'String',
  },
  users_mutation_response: {
    affected_rows: 'Int',
    returning: 'users',
  },
};
