version: '3.6'

services:
  postgres:
    profiles: ['db']
    image: postgres:13
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      ## Expose the port for tooling (SQL language server in IDE, connecting with GUI's etc)
      - ${LOCAL_POSTGRES_PORT}:5432
    environment:
      POSTGRES_PASSWORD: ${LOCAL_POSTGRES_PASSWORD}

  postgres-cms:
    profiles: ['cms']
    image: postgres:13
    restart: always
    volumes:
      - cms_db_data:/var/lib/postgresql/data
    ports:
      - ${LOCAL_POSTGRES_CMS_PORT}:5432
    networks:
      - directus
    environment:
      POSTGRES_PASSWORD: ${LOCAL_POSTGRES_PASSWORD}

  cache:
    profiles: ['cms']
    container_name: cache
    image: redis:6
    networks:
      - directus

  directus:
    profiles: ['cms']
    container_name: directus
    build:
      context: ./packages/cms
      args:
        OIDC_CLIENT_ID: ${DIRECTUS_SIWE_CLIENT_ID}
        OIDC_CLIENT_SECRET: ${DIRECTUS_SIWE_CLIENT_SECRET}
        OIDC_ISSUER_URL: ${DIRECTUS_SIWE_ISSUER_URL}
    ports:
      - ${LOCAL_DIRECTUS_PORT}:${LOCAL_DIRECTUS_PORT}
    volumes:
      # By default, uploads are stored in /directus/uploads
      # Always make sure your volumes matches the storage root when using
      # local driver
      - ./packages/cms/uploads:/directus/uploads
      # Make sure to also mount the volume when using SQLite
      # - ./database:/directus/database
      # If you want to load extensions from the host
      - ./packages/cms/extensions:/directus/extensions
    networks:
      - directus
    depends_on:
      - cache
      - postgres
      - graphql-engine-cms
    environment:
      # Make sure to set these in production
      # (see https://docs.directus.io/configuration/config-options/#general)
      KEY: ${DIRECTUS_KEY}
      SECRET: ${DIRECTUS_SECRET}
      PUBLIC_URL: ${DIRECTUS_PUBLIC_URL}
      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD}

      # DB Settings
      DB_CLIENT: 'pg'
      DB_HOST: postgres-cms
      DB_PORT: ${LOCAL_POSTGRES_PORT}
      DB_DATABASE: ${LOCAL_POSTGRES_DATABASE}
      DB_USER: ${LOCAL_POSTGRES_USER}
      DB_PASSWORD: ${LOCAL_POSTGRES_PASSWORD}

      # Cache Settings
      CACHE_ENABLED: 'true'
      CACHE_STORE: 'redis'
      CACHE_REDIS: 'redis://cache:6379'

      # Storage
      STORAGE_LOCATIONS: 'ipfs'
      STORAGE_IPFS_DRIVER: 's3'
      STORAGE_IPFS_KEY: ${STORAGE_IPFS_KEY}
      STORAGE_IPFS_SECRET: ${STORAGE_IPFS_SECRET}
      STORAGE_IPFS_BUCKET: ${STORAGE_IPFS_BUCKET}
      STORAGE_IPFS_REGION: ${STORAGE_IPFS_REGION}
      STORAGE_IPFS_ENDPOINT: ${STORAGE_IPFS_ENDPOINT}

  graphql-engine: &graphql_engine
    profiles: ['db']
    container_name: hasura
    build:
      context: ./hasura
      args:
        BACKEND_HOST: host.docker.internal:3000/api
        AUTH_HOOK_PATH: hasuraAuthWebhook
        ACTION_BASE_PATH: actions
        REMOTE_SCHEMA_PATH: remote-schemas/graphql
        TRIGGERS_PATH: triggers
    depends_on:
      - 'postgres'
    ports:
      - ${LOCAL_HASURA_PORT}:8080
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${LOCAL_POSTGRES_USER}:${LOCAL_POSTGRES_PASSWORD}@postgres:${LOCAL_POSTGRES_PORT}/${LOCAL_POSTGRES_DATABASE}
      HASURA_GRAPHQL_DATABASE_URL: postgres://${LOCAL_POSTGRES_USER}:${LOCAL_POSTGRES_PASSWORD}@postgres:${LOCAL_POSTGRES_PORT}/${LOCAL_POSTGRES_DATABASE}
      HEROKU_DATABASE_URL: postgres://${LOCAL_POSTGRES_USER}:${LOCAL_POSTGRES_PASSWORD}@postgres:${LOCAL_POSTGRES_PORT}/${LOCAL_POSTGRES_DATABASE}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_DEV_MODE: true

  graphql-engine-cms:
    <<: *graphql_engine
    profiles: ['cms']
    container_name: hasura-cms
    build:
      context: ./hasura-cms
      args:
        BACKEND_HOST: host.docker.internal:3000/api
        AUTH_HOOK_PATH: hasuraAuthWebhook
        ACTION_BASE_PATH: actions
        REMOTE_SCHEMA_PATH: remote-schemas/graphql
        TRIGGERS_PATH: triggers
    ports:
      - ${LOCAL_HASURA_CMS_PORT}:8080
    networks:
      - directus
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${LOCAL_POSTGRES_USER}:${LOCAL_POSTGRES_PASSWORD}@postgres-cms:${LOCAL_POSTGRES_PORT}/${LOCAL_POSTGRES_DATABASE}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_DEV_MODE: true
      DIRECTUS_AUTH_HEADER: ${DIRECTUS_AUTH_HEADER}
      DIRECTUS_GRAPHQL_URL: http://directus:${LOCAL_DIRECTUS_PORT}/graphql

volumes:
  db_data:
  cms_db_data:

networks:
  directus:
